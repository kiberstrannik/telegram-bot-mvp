// src/mini.ts
import "dotenv/config";
import { Bot } from "grammy";
import { generateSpicyReply } from "./llm";


const token = process.env.BOT_TOKEN;
if (!token) {
  throw new Error("‚ùå –ù–µ—Ç BOT_TOKEN –≤ .env");
}

const bot = new Bot(token);

// –¢–∏–ø –¥–ª—è –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
interface ChatTurn {
  role: "user" | "assistant";
  content: string;
}

// –ü—Ä–æ—Å—Ç–∞—è ¬´–ø–∞–º—è—Ç—å¬ª –≤ –û–ó–£ –Ω–∞ –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ (–ø–æ chat_id)
const memory = new Map<number, ChatTurn[]>();

// –õ–æ–≥ –∞–ø–¥–µ–π—Ç–æ–≤ (—É–¥–æ–±–Ω–æ –≤–∏–¥–µ—Ç—å, —á—Ç–æ –¥–æ—Ö–æ–¥–∏—Ç)
bot.use(async (ctx, next) => {
  console.log("üì© update:", ctx.update.update_id, Object.keys(ctx.update));
  await next();
});

// /start
bot.command("start", async (ctx) => {
  await ctx.reply(
    "‚úÖ –ú–∏–Ω–∏-–±–æ—Ç –≤ —Å–µ—Ç–∏.\n" +
    "–û–ø–∏—à–∏ —Å—Ü–µ–Ω—É (–º–µ—Å—Ç–æ/–≤—Ä–µ–º—è), —Å–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –∏ —Ü–µ–ª—å ‚Äî —è –ø—Ä–æ–¥–æ–ª–∂—É –∏—Å—Ç–æ—Ä–∏—é –≤ —Å—Ç–∏–ª–µ Your World Simulator.\n" +
    "–í—Å–µ–≥–¥–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º."
  );
});

// –û—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç
bot.on("message:text", async (ctx) => {
  const chatId = ctx.chat.id;
  const userText = ctx.message.text?.trim() || "";

  const hist = memory.get(chatId) || [];
  hist.push({ role: "user", content: userText });

  try {
    const reply = await generateSpicyReply(chatId, userText, hist);
    hist.push({ role: "assistant", content: reply });

    // –æ–≥—Ä–∞–Ω–∏—á–∏–º –≥–ª—É–±–∏–Ω—É –∏—Å—Ç–æ—Ä–∏–∏, —á—Ç–æ–±—ã –Ω–µ —Ä–∞–∑–¥—É–≤–∞—Ç—å –û–ó–£
    if (hist.length > 30) hist.splice(0, hist.length - 30);
    memory.set(chatId, hist);

    await ctx.reply(reply, { parse_mode: "Markdown" }).catch(async () => {
      // –µ—Å–ª–∏ Markdown —É–ø–∞–ª, —à–ª—ë–º –∫–∞–∫ plain
      await ctx.reply(reply);
    });
  } catch (err: any) {
    console.error("LLM error:", err);
    const msg = err?.status === 429
      ? "‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ API. –ü–æ–ø—Ä–æ–±—É–π –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ."
      : "‚ö†Ô∏è –£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ —á—É—Ç—å –ø–æ–∑–∂–µ.";
    await ctx.reply(msg);
  }
});

// –ó–∞–ø—É—Å–∫
(async () => {
  console.log("üöÄ Booting mini bot‚Ä¶");
  await bot.api.deleteWebhook({ drop_pending_updates: true });
  await bot.start();
  console.log("‚úÖ Mini bot started. Ctrl+C ‚Äî –≤—ã—Ö–æ–¥.");
})();
