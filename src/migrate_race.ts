import Database from "better-sqlite3";

console.log("üöÄ –ú–∏–≥—Ä–∞—Ü–∏—è: –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ character_race –≤ —Ç–∞–±–ª–∏—Ü—É users...");

const DB_PATH = process.env.DATABASE_URL || "./bot.db";
const db = new Database(DB_PATH);

function hasColumn(table: string, column: string): boolean {
  const stmt = db.prepare(`PRAGMA table_info(${table});`);
  const columns = stmt.all() as { name: string }[];
  return columns.some((col) => col.name === column);
}

try {
  if (!hasColumn("users", "character_race")) {
    db.exec(`ALTER TABLE users ADD COLUMN character_race TEXT DEFAULT NULL;`);
    console.log("‚úÖ –ü–æ–ª–µ character_race —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ.");
  } else {
    console.log("‚ÑπÔ∏è –ü–æ–ª–µ character_race —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞.");
  }
} catch (err) {
  console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è character_race:", err);
}

db.close();
console.log("üèÅ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
